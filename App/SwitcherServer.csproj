<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0-windows</TargetFramework>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <PublishSingleFile Condition="'$(Configuration)' == 'Release'">true</PublishSingleFile>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishTrimmed>false</PublishTrimmed>
    <SelfContained>true</SelfContained>
    <OutputType>Exe</OutputType>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <SpaRoot>ClientApp\</SpaRoot>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <FileVersion>3.0.0.0</FileVersion>
    <Version>3.0.0</Version>
    <ApplicationIcon>favicon.ico</ApplicationIcon>
    <UserSecretsId>8f4dc8ee-8546-4726-8e94-a79526e2bd10</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\build\**" />
    <Content Remove="ClientApp\build\**" />
    <EmbeddedResource Remove="ClientApp\build\**" />
    <None Remove="ClientApp\build\**" />
    <TypeScriptCompile Remove="ClientApp\build\**" />
    <TypeScriptCompile Remove="ClientApp\node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MediatR" Version="11.1.0" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.11" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.9.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <COMReference Include="BMDSwitcherAPI">
      <Guid>{8A92B919-156C-4D61-94EF-03F9BE4004B0}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>0</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>tlbimp</WrapperTool>
      <Isolated>False</Isolated>
    </COMReference>
  </ItemGroup>
  
  <ItemGroup>
    <Content Remove="ClientApp\package-lock.json" />
    <Content Remove="ClientApp\package.json" />
    <Content Remove="ClientApp\public\manifest.json" />
    <Content Remove="ClientApp\tsconfig.json" />
    <Content Remove="tsconfig.json" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="ClientApp\package-lock.json" />
    <None Include="ClientApp\package.json" />
    <None Include="ClientApp\public\manifest.json" />
    <None Include="ClientApp\tsconfig.json" />
    <None Include="tsconfig.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="ResolveInteropOutputPath" BeforeTargets="ResolveComReferences" Condition="'@(COMReference)'!='' or '@(COMFileReference)'!=''">
    <PropertyGroup Condition=" '$(InteropOutputPath)' == '' ">
      <InteropOutputPath>$(MSBuildProjectDirectory)\$(IntermediateOutputPath)</InteropOutputPath>
    </PropertyGroup>
  </Target>

  <Target Name="ZipOutputPath" AfterTargets="Publish">
    <PropertyGroup>
      <CurrentDate>$([System.DateTime]::Now.ToString(yyyy.MM.dd))</CurrentDate>
    </PropertyGroup>
    <Delete Files="$(OutputPath)publish\SwitcherServer.pdb" />
    <Delete Files="$(OutputPath)publish\SwitcherServer.Views.pdb" />
    <Delete Files="$(OutputPath)publish\appsettings.Development.json" />
    <ZipDirectory Overwrite="true" SourceDirectory="$(OutputPath)\publish" DestinationFile="$(MSBuildProjectDirectory)\bin\SwitcherServer.$(CurrentDate).zip" />
  </Target>

</Project>
